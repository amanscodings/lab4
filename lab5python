class TreeNode:
  def __init__(self, val=0, left=None, right=None):
      self.val = val
      self.left = left
      self.right = right

def isValidBST(root):
  return validate(root, float("-inf"), float("inf"))

def validate(node, min_val, max_val):
  if not node:
      return True
  if node.val <= min_val or node.val >= max_val:
      return False
  return validate(node.left, min_val, node.val) and validate(node.right, node.val, max_val)


root1 = TreeNode(4)
root1.left = TreeNode(3)
root1.right = TreeNode(8)
root1.left.left = TreeNode(1)
root1.right.left = TreeNode(5)
root1.right.right = TreeNode(9)


print("Case 1 is: ", isValidBST(root1))


root2 = TreeNode(1)
root2.left = TreeNode(2)
root2.right = TreeNode(8)
root2.left.left = TreeNode(3)
root2.left.right = TreeNode(4)
root2.right.left = TreeNode(5)
root2.right.right = TreeNode(6)


print("Case 2 is: ", isValidBST(root2))
