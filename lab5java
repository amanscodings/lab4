public class TreeNode {
    int val;
    TreeNode left;
    TreeNode right;

    TreeNode() {}

    TreeNode(int val) { this.val = val; }

    TreeNode(int val, TreeNode left, TreeNode right) {
        this.val = val;
        this.left = left;
        this.right = right;
    }

    public static boolean isValidBST(TreeNode root) {
        return validate(root, Integer.MIN_VALUE, Integer.MAX_VALUE);
    }

    private static boolean validate(TreeNode node, int minVal, int maxVal) {
        if (node == null) {
            return true;
        }

        if (node.val <= minVal || node.val >= maxVal) {
            return false;
        }

        return validate(node.left, minVal, node.val) && validate(node.right, node.val, maxVal);
    }

    public static void main(String[] args) {
        
        TreeNode root1 = new TreeNode(4);
        root1.left = new TreeNode(3);
        root1.right = new TreeNode(8);
        root1.left.left = new TreeNode(1);
        root1.right.right = new TreeNode(9);
        root1.right.left = new TreeNode(5);

        System.out.println("Case 1 : " + isValidBST(root1));

        
        TreeNode root2 = new TreeNode(1);
        root2.left = new TreeNode(2);
        root2.right = new TreeNode(8);
        root2.left.left = new TreeNode(3);
        root2.left.right = new TreeNode(4);
        root2.right.right = new TreeNode(6);
        root2.right.left = new TreeNode(5);

        System.out.println("Case 2 : " + isValidBST(root2));
    }
}
